apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: venus-sector-manager-{{.TestID}}
spec:
  replicas: 1
  serviceName: venus-sector-manager-{{.TestID}}-svc
  selector:
    matchLabels:
      app: venus-sector-manager-{{.TestID}}-pod
  template:
    metadata:
      labels:
        app: venus-sector-manager-{{.TestID}}-pod
    spec:
      containers:
        - name: venus-sector-manager-{{.TestID}}
          image: "{{if gt (len .PrivateRegistry) 0}}{{.PrivateRegistry}}/{{end}}filvenus/venus-sector-manager:{{.CodeVersion}}"
          args: ["run"]
          ports:
            - containerPort: 1789
              protocol: TCP
          volumeMounts:
            - mountPath: /root
              name: venus-messager-receive-pvc
            - name: sector-manager-cfg
              mountPath: "/root/.venus-sector-manager/sector-manager.cfg"
              subPath: "sector-manager.cfg"
            - mountPath: /shared-dir
                name: shared-dir-v
      volumes:
        - name: sector-manager-cfg
          configMap:
            name: venus-sector-manager-cfg-{{.TestID}}
            items:
              - key: sector-manager.cfg
                path: sector-manager.cfg
        - name: shared-dir-v
            persistentVolumeClaim:
              claimName: testnet-shared-dir
  volumeClaimTemplates:
    - metadata:
        name: venus-messager-receive-pvc # name+podname
        labels:
          app: venus-messager-receive-{{.UniqueId}}-pvc
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "nfs-client"
        resources:
          requests:
            storage: 300Mi