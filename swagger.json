{
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "BrightBird API.",
    "contact": {
      "email": "venus@ipfsconmmunity.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "127.0.0.1:12356",
  "basePath": "/api/v1",
  "paths": {
    "/cases": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Get specific test case by name.",
        "operationId": "saveCases",
        "parameters": [
          {
            "description": "test flow json",
            "name": "testflow",
            "in": "body",
            "required": true,
            "schema": {
              "description": "test flow json",
              "type": "object",
              "$ref": "#/definitions/testFlow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/cases/list": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Lists all exec test flows.",
        "operationId": "listTestFlows",
        "responses": {
          "200": {
            "description": "testFlow",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testFlow"
              }
            }
          }
        }
      }
    },
    "/cases/plugins": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Lists all exec plugins.",
        "operationId": "listCasesPlugins",
        "responses": {
          "200": {
            "description": "pluginOut",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pluginOut"
              }
            }
          }
        }
      }
    },
    "/cases/{name}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Get specific test case by name.",
        "operationId": "getTestFlow",
        "parameters": [
          {
            "type": "string",
            "description": "name of test flow",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "testFlow",
            "schema": {
              "$ref": "#/definitions/testFlow"
            }
          }
        }
      }
    },
    "/deploy/plugins": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Lists all deploy plugin.",
        "operationId": "listDeployPlugins",
        "responses": {
          "200": {
            "description": "pluginOut",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pluginOut"
              }
            }
          }
        }
      }
    },
    "/group": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Get specific test case by name.",
        "operationId": "saveCases",
        "parameters": [
          {
            "description": "group json",
            "name": "group",
            "in": "body",
            "required": true,
            "schema": {
              "description": "group json",
              "type": "object",
              "$ref": "#/definitions/group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/group/list": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Lists all group.",
        "operationId": "listGroup",
        "responses": {
          "200": {
            "description": "group",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/group"
              }
            }
          }
        }
      }
    },
    "/group/{name}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Get specific group by name.",
        "operationId": "getTestFlow",
        "parameters": [
          {
            "type": "string",
            "description": "name of test flow",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "group",
            "schema": {
              "$ref": "#/definitions/group"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "get backend version",
        "produces": [
          "application/text"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "operationId": "getVersion"
      }
    }
  },
  "definitions": {
    "BaseTime": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "创建时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "CreateTime"
        },
        "modifiedTime": {
          "description": "最后修改时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "ModifiedTime"
        }
      },
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "Category": {
      "type": "string",
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "DeployNode": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "the name for this test flow",
          "type": "string",
          "minLength": 3,
          "x-go-name": "Name"
        },
        "params": {
          "type": "object",
          "x-go-name": "Params"
        }
      },
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "PluginInfo": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "path": {
          "type": "string",
          "x-go-name": "Path"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "TestItem": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "the name for this test flow",
          "type": "string",
          "minLength": 3,
          "x-go-name": "Name"
        },
        "params": {
          "type": "object",
          "x-go-name": "Params"
        }
      },
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "group": {
      "description": "Group",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "createTime": {
          "description": "创建时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "CreateTime"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "modifiedTime": {
          "description": "最后修改时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "ModifiedTime"
        },
        "name": {
          "description": "the name for this test flow",
          "type": "string",
          "minLength": 3,
          "x-go-name": "Name"
        }
      },
      "x-go-name": "Group",
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "pluginOut": {
      "description": "PluginOut",
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "createTime": {
          "description": "创建时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "CreateTime"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "isAnnotateOut": {
          "type": "boolean",
          "x-go-name": "IsAnnotateOut"
        },
        "modifiedTime": {
          "description": "最后修改时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "ModifiedTime"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "out": {
          "$ref": "#/definitions/property"
        },
        "path": {
          "type": "string",
          "x-go-name": "Path"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/property"
          },
          "x-go-name": "Properties"
        },
        "svcProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/property"
          },
          "x-go-name": "SvcProperties"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-name": "PluginOut",
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "property": {
      "description": "Property Property",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "require": {
          "type": "boolean",
          "x-go-name": "Require"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "value": {
          "x-go-name": "Value"
        }
      },
      "x-go-name": "Property",
      "x-go-package": "github.com/hunjixin/brightbird/types"
    },
    "testFlow": {
      "description": "TestFlow",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "GroupId": {
          "type": "string"
        },
        "cases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestItem"
          },
          "x-go-name": "Cases"
        },
        "createTime": {
          "description": "创建时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "CreateTime"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "modifiedTime": {
          "description": "最后修改时间",
          "type": "string",
          "format": "int64",
          "x-go-name": "ModifiedTime"
        },
        "name": {
          "description": "the name for this test flow",
          "type": "string",
          "minLength": 3,
          "x-go-name": "Name"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeployNode"
          },
          "x-go-name": "Nodes"
        }
      },
      "x-go-name": "TestFlow",
      "x-go-package": "github.com/hunjixin/brightbird/types"
    }
  },
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}